<Window x:Class="GazoView.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:GazoView"
        xmlns:converter="clr-namespace:GazoView.Converter"
        mc:Ignorable="d"
        Background="{Binding Theme.WindowBackground}"
        WindowStyle="None"
        AllowDrop="True" AllowsTransparency="True"
        Width="{Binding Setting.Width, Mode=TwoWay}"
        Height="{Binding Setting.Height, Mode=TwoWay}"
        Left="{Binding Setting.LocationX, Mode=TwoWay}"
        Top="{Binding Setting.LocationY, Mode=TwoWay}"
        UseLayoutRounding="True"
        Loaded="Window_Loaded"
        MouseLeftButtonDown="Window_MouseLeftButtonDown"
        MouseWheel="Window_MouseWheel"
        SourceInitialized="Window_SourceInitialized"
        PreviewKeyDown="Window_PreviewKeyDown"
        PreviewDragOver="Window_PreviewDragOver" PreviewDragLeave="Window_PreviewDragLeave" PreviewDrop="Window_PreviewDrop"
        MouseEnter="Window_MouseEnter"
        MouseLeave="Window_MouseLeave"
        SizeChanged="Window_SizeChanged"
        Style="{DynamicResource WindowChromeStyle}"
        StateChanged="Window_StateChanged">

    <Window.Resources>
        <converter:LessLinePositionConverter x:Key="lessLinePositionConverter"/>
        <converter:MoreLinePositionConverter x:Key="moreLinePositionConverter"/>
        <converter:RectangleOuterSizeConverter x:Key="rectangleOuterSizeConverter"/>
        <converter:TrimmingSizeResultConverter x:Key="trimmingSizeResultConverter"/>

        <Style TargetType="{x:Type Window}" x:Key="WindowChromeStyle">
            <Setter Property="WindowChrome.WindowChrome">
                <Setter.Value>
                    <WindowChrome CornerRadius="3" GlassFrameThickness="1" ResizeBorderThickness="8" UseAeroCaptionButtons="False" CaptionHeight="{DynamicResource CaptionHeight}" />
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="CaptionButtonStyleKey" TargetType="{x:Type Button}">
            <Setter Property="OverridesDefaultStyle" Value="True" />
            <Setter Property="Foreground" Value="White" />
            <Setter Property="FontFamily" Value="Marlett"/>
            <Setter Property="FontSize" Value="16"/>
            <Setter Property="IsTabStop" Value="False"/>
            <Setter Property="HorizontalContentAlignment" Value="Center" />
            <Setter Property="VerticalContentAlignment" Value="Center" />
            <Setter Property="Margin" Value="0,3,0,0" />
            <Setter Property="Padding" Value="12, 6" />
            <Setter Property="WindowChrome.IsHitTestVisibleInChrome" Value="True" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border x:Name="border" Background="Transparent" SnapsToDevicePixels="True">
                            <Border.Effect>
                                <DropShadowEffect Opacity="0"/>
                            </Border.Effect>
                            <VisualStateManager.VisualStateGroups>
                                <VisualStateGroup x:Name="CommonStates">
                                    <VisualState x:Name="Normal">
                                        <Storyboard>
                                            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="border">
                                                <EasingDoubleKeyFrame KeyTime="0" Value="0"/>
                                            </DoubleAnimationUsingKeyFrames>
                                            <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Panel.Background).(SolidColorBrush.Color)" Storyboard.TargetName="border">
                                                <EasingColorKeyFrame KeyTime="0" Value="Transparent"/>
                                            </ColorAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="MouseOver">
                                        <Storyboard>
                                            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="border">
                                                <EasingDoubleKeyFrame KeyTime="0" Value="0.8"/>
                                            </DoubleAnimationUsingKeyFrames>
                                            <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Panel.Background).(SolidColorBrush.Color)" Storyboard.TargetName="border">
                                                <EasingColorKeyFrame KeyTime="0" Value="DimGray"/>
                                            </ColorAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="Pressed">
                                        <Storyboard>
                                            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="border">
                                                <EasingDoubleKeyFrame KeyTime="0" Value="1"/>
                                            </DoubleAnimationUsingKeyFrames>
                                            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Effect).(DropShadowEffect.ShadowDepth)" Storyboard.TargetName="border">
                                                <EasingDoubleKeyFrame KeyTime="0" Value="0"/>
                                            </DoubleAnimationUsingKeyFrames>
                                            <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Effect).(DropShadowEffect.Color)" Storyboard.TargetName="border">
                                                <EasingColorKeyFrame KeyTime="0" Value="White"/>
                                            </ColorAnimationUsingKeyFrames>
                                            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Effect).(DropShadowEffect.Opacity)" Storyboard.TargetName="border">
                                                <EasingDoubleKeyFrame KeyTime="0" Value="0.6"/>
                                            </DoubleAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="Disabled"/>
                                </VisualStateGroup>
                            </VisualStateManager.VisualStateGroups>
                            <ContentPresenter x:Name="contentPresenter" Focusable="False" Margin="{TemplateBinding Padding}"
                                      HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                      VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        </Style>

        <Style x:Key="CloseButtonStyleKey" TargetType="{x:Type Button}">
            <Setter Property="OverridesDefaultStyle" Value="True" />
            <Setter Property="Foreground" Value="White" />
            <Setter Property="FontFamily" Value="Marlett"/>
            <Setter Property="FontSize" Value="16"/>
            <Setter Property="IsTabStop" Value="False"/>
            <Setter Property="HorizontalContentAlignment" Value="Center" />
            <Setter Property="VerticalContentAlignment" Value="Center" />
            <Setter Property="Margin" Value="0,3,3,0" />
            <Setter Property="Padding" Value="12, 6" />
            <Setter Property="WindowChrome.IsHitTestVisibleInChrome" Value="True" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border x:Name="border" Background="Transparent" SnapsToDevicePixels="True">
                            <Border.Effect>
                                <DropShadowEffect Opacity="0"/>
                            </Border.Effect>
                            <VisualStateManager.VisualStateGroups>
                                <VisualStateGroup x:Name="CommonStates">
                                    <VisualState x:Name="Normal">
                                        <Storyboard>
                                            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="border">
                                                <EasingDoubleKeyFrame KeyTime="0" Value="0"/>
                                            </DoubleAnimationUsingKeyFrames>
                                            <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Panel.Background).(SolidColorBrush.Color)" Storyboard.TargetName="border">
                                                <EasingColorKeyFrame KeyTime="0" Value="Transparent"/>
                                            </ColorAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="MouseOver">
                                        <Storyboard>
                                            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="border">
                                                <EasingDoubleKeyFrame KeyTime="0" Value="0.8"/>
                                            </DoubleAnimationUsingKeyFrames>
                                            <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Panel.Background).(SolidColorBrush.Color)" Storyboard.TargetName="border">
                                                <EasingColorKeyFrame KeyTime="0" Value="Red"/>
                                            </ColorAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="Pressed">
                                        <Storyboard>
                                            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="border">
                                                <EasingDoubleKeyFrame KeyTime="0" Value="1"/>
                                            </DoubleAnimationUsingKeyFrames>
                                            <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Panel.Background).(SolidColorBrush.Color)" Storyboard.TargetName="border">
                                                <EasingColorKeyFrame KeyTime="0" Value="LightCoral"/>
                                            </ColorAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="Disabled"/>
                                </VisualStateGroup>
                            </VisualStateManager.VisualStateGroups>
                            <ContentPresenter x:Name="contentPresenter" Focusable="False" Margin="{TemplateBinding Padding}"
                                      HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                      VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        </Style>

        <Style x:Key="CaptionTitleText" TargetType="{x:Type TextBlock}">
            <Setter Property="OverridesDefaultStyle" Value="True" />
            <Setter Property="WindowChrome.IsHitTestVisibleInChrome" Value="True" />
            <Setter Property="Effect">
                <Setter.Value>
                    <DropShadowEffect ShadowDepth="2"
                                      Direction="315"
                                      Color="Black"
                                      Opacity="0.6"
                                      BlurRadius="4"/>
                </Setter.Value>
            </Setter>
        </Style>
        
        <Style x:Key="ImageInfoText" TargetType="{x:Type TextBlock}">
            <Setter Property="FontFamily" Value="Source Han Code JP"/>
            <Setter Property="FontSize" Value="12"/>
            <Setter Property="Foreground" Value="{Binding Theme.ImageInfoForeground}"/>
            <Setter Property="Margin" Value="3"/>
            <Setter Property="Effect">
                <Setter.Value>
                    <DropShadowEffect ShadowDepth="2"
                                      Direction="315"
                                      Color="Black"
                                      Opacity="0.6"
                                      BlurRadius="4"/>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="trimmingTextBlock" TargetType="{x:Type TextBlock}">
            <Setter Property="FontFamily" Value="Meiryo UI"/>
            <Setter Property="FontSize" Value="12"/>
            <Setter Property="Foreground" Value="WhiteSmoke"/>
            <Setter Property="VerticalAlignment" Value="Center"/>
            <Setter Property="Margin" Value="3"/>
        </Style>
        
        <Style x:Key="trimmingTextBox" TargetType="{x:Type TextBox}">
            <Setter Property="FontFamily" Value="Meiryo UI"/>
            <Setter Property="FontSize" Value="12"/>
            <Setter Property="Width" Value="40"/>
            <Setter Property="Height" Value="20"/>
            <Setter Property="VerticalAlignment" Value="Center"/>
            <Setter Property="Padding" Value="2,1"/>
            <EventSetter Event="PreviewTextInput" Handler="trimmingTextBox_PreviewTextInput"/>
            <EventSetter Event="PreviewKeyDown" Handler="trimmingTextBox_PreviewKeyDown"/>
        </Style>
    </Window.Resources>

    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Name="gridRow0" Height="*"/>
            <RowDefinition Name="gridRow1" Height="0"/>
        </Grid.RowDefinitions>
        <local:AdvancedScrollViewer
                x:Name="scrollViewer"
                Grid.Row="0"
                HorizontalScrollBarVisibility="Auto" VerticalScrollBarVisibility="Auto"
                MouseMove="scrollViewer_PreviewMouseMove"
                PreviewMouseRightButtonDown="scrollViewer_PreviewMouseRightButtonDown"
                PreviewMouseRightButtonUp="scrollViewer_PreviewMouseRightButtonUp">
            <Canvas Name="canvas" Margin="0"
                    MouseLeftButtonDown="Window_MouseLeftButtonDown"
                    MouseWheel="Window_MouseWheel"
                    MouseMove="canvas_MouseMove">
                <Canvas.RenderTransform>
                    <MatrixTransform x:Name="matrixTransform"/>
                </Canvas.RenderTransform>
                <Image Name="mainImage"
                       Stretch="Uniform"
                       HorizontalAlignment="Center" VerticalAlignment="Center"
                       RenderOptions.EdgeMode="Aliased"
                       RenderOptions.BitmapScalingMode="Fant"
                       SizeChanged="mainImage_SizeChanged"/>

                <Rectangle Name="rectangle_top"
                           Fill="DimGray" Opacity="0.6"
                           Visibility="Collapsed"
                           Canvas.Left="0"
                           Canvas.Top="0"
                           Width="{Binding ActualWidth, ElementName=mainImage}"
                           Height="{Binding Y1,ElementName=lineH_top}"/>
                <Rectangle Name="rectangle_left"
                           Fill="DimGray" Opacity="0.6"
                           Visibility="Collapsed"
                           Canvas.Left="0"
                           Canvas.Top="{Binding Y1, ElementName=lineH_top}"
                           Width="{Binding X1, ElementName=lineV_left}">
                    <Rectangle.Height>
                        <MultiBinding Converter="{StaticResource rectangleOuterSizeConverter}">
                            <Binding Path="Y1" ElementName="lineH_top"/>
                            <Binding Path="Y1" ElementName="lineH_bottom"/>
                        </MultiBinding>
                    </Rectangle.Height>
                </Rectangle>
                <Rectangle Name="rectangle_right"
                           Fill="DimGray" Opacity="0.6"
                           Visibility="Collapsed"
                           Canvas.Left="{Binding X1, ElementName=lineV_right}"
                           Canvas.Top="{Binding Y1, ElementName=lineH_top}">
                    <Rectangle.Width>
                        <MultiBinding Converter="{StaticResource rectangleOuterSizeConverter}">
                            <Binding Path="X1" ElementName="lineV_right"/>
                            <Binding Path="ActualWidth" ElementName="mainImage"/>
                        </MultiBinding>
                    </Rectangle.Width>
                    <Rectangle.Height>
                        <MultiBinding Converter="{StaticResource rectangleOuterSizeConverter}">
                            <Binding Path="Y1" ElementName="lineH_top"/>
                            <Binding Path="Y1" ElementName="lineH_bottom"/>
                        </MultiBinding>
                    </Rectangle.Height>
                </Rectangle>
                <Rectangle Name="rectangle_bottom"
                           Fill="DimGray" Opacity="0.6"
                           Visibility="Collapsed"
                           Canvas.Left="0"
                           Canvas.Top="{Binding Y1, ElementName=lineH_bottom}"
                           Width="{Binding ActualWidth, ElementName=mainImage}">
                    <Rectangle.Height>
                        <MultiBinding Converter="{StaticResource rectangleOuterSizeConverter}">
                            <Binding Path="Y1" ElementName="lineH_bottom"/>
                            <Binding Path="ActualHeight" ElementName="mainImage"/>
                        </MultiBinding>
                    </Rectangle.Height>
                </Rectangle>

                <Line Name="lineV_left" Stroke="Black" StrokeThickness="4"
                      Visibility="Collapsed"
                      Cursor="SizeWE"
                      X1="20"
                      Y1="0"
                      X2="{Binding X1, RelativeSource={RelativeSource Mode=Self}}"
                      Y2="{Binding ActualHeight, ElementName=mainImage}"
                      MouseLeftButtonDown="lineX_X_back_MouseLeftButtonDown"/>
                <Line Name="lineV_right" Stroke="Black" StrokeThickness="4"
                      Visibility="Collapsed"
                      Cursor="SizeWE"
                      X1="100"
                      Y1="0"
                      X2="{Binding X1, RelativeSource={RelativeSource Mode=Self}}"
                      Y2="{Binding ActualHeight, ElementName=mainImage}"
                      MouseLeftButtonDown="lineX_X_back_MouseLeftButtonDown"/>
                <Line Name="lineH_top" Stroke="Black" StrokeThickness="4"
                      Visibility="Collapsed"
                      Cursor="SizeNS"
                      X1="0"
                      Y1="20"
                      X2="{Binding ActualWidth, ElementName=mainImage}"
                      Y2="{Binding Y1, RelativeSource={RelativeSource Mode=Self}}"
                      MouseLeftButtonDown="lineX_X_back_MouseLeftButtonDown"/>
                <Line Name="lineH_bottom" Stroke="Black" StrokeThickness="4"
                      Visibility="Collapsed"
                      Cursor="SizeNS"
                      X1="0"
                      Y1="100"
                      X2="{Binding ActualWidth, ElementName=mainImage}"
                      Y2="{Binding Y1, RelativeSource={RelativeSource Mode=Self}}"
                      MouseLeftButtonDown="lineX_X_back_MouseLeftButtonDown"/>
            </Canvas>
        </local:AdvancedScrollViewer>

        <Slider Name="rate"
                IsSnapToTickEnabled="True"
                Minimum="25"
                Maximum="800"
                Ticks="20,25,30,35,40,45,50,60,70,80,90,100,120,140,160,180,200,240,280,320,400,480,560,640,720,800"
                Value="100"
                Visibility="Hidden"/>

        <TextBlock Name="imageTitle" Foreground="{Binding Theme.TitleForeground}"
                   Grid.Row="0"
                   Margin="3,5"
                   Visibility="Hidden"
                   VerticalAlignment="Top"
                   FontFamily="Source Han Code JP" FontSize="12"
                   Style="{DynamicResource CaptionTitleText}"/>

        <StackPanel Name="imageInfoPanel"
                    Grid.Row="0"
                    HorizontalAlignment="Left" VerticalAlignment="Top"
                    Margin="8,32"
                    Visibility="Hidden">
            <TextBlock Name="info_ImageName" Style="{DynamicResource ImageInfoText}"/>
            <TextBlock Name="info_ImagePath" Style="{DynamicResource ImageInfoText}"/>
            <TextBlock Name="info_ImageSize" Style="{DynamicResource ImageInfoText}"/>
            <TextBlock Name="info_ImageLength" Style="{DynamicResource ImageInfoText}"/>
            <TextBlock Name="info_ImageModDate" Style="{DynamicResource ImageInfoText}"/>
        </StackPanel>

        <StackPanel Name="imageInfoPanel2"
                    Grid.Row="0"
                    HorizontalAlignment="Right" VerticalAlignment="Top"
                    Margin="20,32"
                    Visibility="Hidden">
            <TextBlock Name="fileCount" Style="{DynamicResource ImageInfoText}" HorizontalAlignment="Right"/>
            <TextBlock Name="trimmingModeText" Style="{DynamicResource ImageInfoText}" HorizontalAlignment="Right"/>
            <TextBlock Name="scalingModeText" Style="{DynamicResource ImageInfoText}" HorizontalAlignment="Right"/>
            <StackPanel Orientation="Horizontal" HorizontalAlignment="Right" >
                <TextBlock Text="倍率：" Style="{DynamicResource ImageInfoText}"/>
                <TextBlock Name="info_ImageRate"
                           Style="{DynamicResource ImageInfoText}"
                           Text="{Binding Value, ElementName=rate}"/>
                <TextBlock Text="% " Style="{DynamicResource ImageInfoText}"/>
            </StackPanel>
        </StackPanel>

        <StackPanel Grid.Row="0" Orientation="Horizontal" Margin="0" HorizontalAlignment="Right" VerticalAlignment="Top">
            <Button Name="minimizeButton" Content="0" Style="{DynamicResource CaptionButtonStyleKey}" Click="minimizeButton_Click"/>
            <Button Name="maximizeButton" Content="1" Style="{DynamicResource CaptionButtonStyleKey}" Click="maximizeButton_Click"/>
            <Button Name="closeButton" Content="r" Style="{DynamicResource CloseButtonStyleKey}" Click="closeButton_Click"/>
        </StackPanel>

        <StackPanel Grid.Row="1" Orientation="Horizontal" 
                    Name="trimmingModeSetting"
                    Visibility="Collapsed">
            <TextBlock Text="Left:" Style="{DynamicResource trimmingTextBlock}"/>
            <TextBox Name="lineLeft"
                     Text="{Binding X1, ElementName=lineV_left, Converter={StaticResource lessLinePositionConverter}, Mode=TwoWay}"
                     Style="{DynamicResource trimmingTextBox}"/>

            <TextBlock Text="Top:" Style="{DynamicResource trimmingTextBlock}"/>
            <TextBox Name="lineTop" Text="{Binding Y1, ElementName=lineH_top, Converter={StaticResource lessLinePositionConverter}, Mode=TwoWay}"
                     Style="{DynamicResource trimmingTextBox}"/>

            <TextBlock Text="Right:" Style="{DynamicResource trimmingTextBlock}"/>
            <TextBox Name="lineRight" Text="{Binding X1, ElementName=lineV_right, Converter={StaticResource moreLinePositionConverter}, Mode=TwoWay}"
                     Style="{DynamicResource trimmingTextBox}"/>

            <TextBlock Text="Bottom:" Style="{DynamicResource trimmingTextBlock}"/>
            <TextBox Name="lineBottom" Text="{Binding Y1, ElementName=lineH_bottom, Converter={StaticResource moreLinePositionConverter}, Mode=TwoWay}"
                     Style="{DynamicResource trimmingTextBox}" KeyDown="trimmingTextBox_PreviewKeyDown"/>

            <TextBlock Text=" Size:" Style="{DynamicResource trimmingTextBlock}"/>
            <TextBlock Name="trimmingResultSize" Style="{DynamicResource trimmingTextBlock}">
                <TextBlock.Text>
                    <MultiBinding Converter="{StaticResource trimmingSizeResultConverter}">
                        <Binding Path="X1" ElementName="lineV_left"/>
                        <Binding Path="X1" ElementName="lineV_right"/>
                        <Binding Path="Y1" ElementName="lineH_top"/>
                        <Binding Path="Y1" ElementName="lineH_bottom"/>
                    </MultiBinding>
                </TextBlock.Text>
            </TextBlock>
        </StackPanel>
    </Grid>
</Window>
